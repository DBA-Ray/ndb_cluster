[mysqld]

# 二进制日志
  log_bin = mysql-bin
  log_bin_index = mysql-bin.index
  server_id = 1
  binlog_format = row
  binlog_expire_logs_seconds = 604800
  binlog_transaction_dependency_tracking = WRITESET
  binlog_checksum = CRC32
  binlog_transaction_compression = ON
  binlog_transaction_compression_level_zstd = 7 #（1-22）
  transaction_write_set_extraction = XXHASH64 #以便在server收集写集合的同时将其记录到二进制日志。写集合基于每行的主键，并且是行更改后的唯一标识此标识将用于检测冲突。
  sync_binlog = 1 #最安全，最多丢失一个事务，需要SSD磁盘，ext4格式
  binlog_rows_query_log_events = 1

# per_thread_buffers
  join_buffer_size = 256K #处理逻辑是驱动表的一行和非驱动表联合查找，这时就可以将非驱动表放入join_buffer，不需要访问拥有并发保护机制的buffer_pool
  sort_buffer_size = 256K #执行order by和group by分配，用于存储排序的中间结果，当分配空间大于2M时会使用mmap而不是malloc来进行内存分配，导致效率降低
  read_rnd_buffer_size = 256K #当thread进行随机扫描数据时会首先扫描该buffer空间以避免更多的物理读
  read_buffer_size = 256K #当thread进行顺序扫描数据时会首先扫描该buffer空间以避免更多的物理读
  binlog_cache_size = 256K #用于在事务期间保存对二进制日志的更改的内存缓冲区的大小
  binlog_stmt_cache_size = 32k #用于在非事务期间保存对二进制日志的更改的内存缓冲区的大小

# basic
  basedir = /usr/sbin/
  plugin_dir = /usr/lib64/mysql/plugin
  lc_messages_dir = /usr/share/mysql-8.0
  character_sets_dir = /usr/share/mysql-8.0/charsets
  datadir = {{ datadir }}
  tmpdir = {{ datadir }}
  socket = /var/lib/mysql/mysql.sock
  log-error = {{ basedir }}/mysqld.log
  pid-file = /var/run/mysqld/mysqld.pid
  default_authentication_plugin = mysql_native_password
  port = {{ mysql_port }}
  character_set_server = utf8mb4
  collation_server = utf8mb4_0900_ai_ci
  auto_increment_offset = 1
  auto_increment_increment = 1

# 日志时间戳改为系统
  log_timestamps = system

# repilication_settings
#  gtid_mode = on
#  enforce_gtid_consistency = true
  master_info_repository = TABLE
  relay_log_info_repository = TABLE
  read_only = 1
  slave_parallel_type = logical_clock
  slave_parallel_workers = 16
  slave_preserve_commit_order = on
  slave_allow_batching=1
  log_slave_updates = 1
  relay_log = relay
  relay_log_index = relay.index
  replicate_wild_ignore_table = mysql.ndb_apply_status

# 开启慢查询
  long_query_time = 1
  slow_query_log = 1
  slow_query_log_file = {{ basedir }}/slow.log

# 记录管理语句
  log_slow_admin_statements = 1

# 连接数优化
  max_connections = 2000
  max_connect_errors = 100000
  max_allowed_packet = 1072693248 #必须小于slave_max_allowed_packet的默认值1073741824（1G）

# thread optimization
  thread_cache_size = 400 #default value: 8 + (max_connections / 100) maxvalue: 100

# table缓存优化（建议10倍于max_connections）
  table_open_cache = 20000
  #table_definition_cache = 20000 #MIN（400 + table_open_cache / 2, 2000）

# 避免MySQL的外部锁定，减少出错几率增强稳定性。
  skip_external_locking

# innodb 优化
  #innodb_dedicated_server = 1
  innodb_buffer_pool_size = 25G #by innodb_dedicated_server
  #innodb_buffer_pool_instances = 64
  innodb_log_file_size = 256M #by innodb_dedicated_server
  innodb_flush_method = O_DIRECT #避免双重缓冲，让数据库跳过文件系统缓冲直接和设备进行交互，SSD必选 by innodb_dedicated_server
  innodb_log_files_in_group = 2 #by innodb_dedicated_server
  innodb_open_files = 20000 #随table_open_cache变化
  innodb_io_capacity = 5000
  innodb_io_capacity_max = 50000
  innodb_flush_sync = 0 #To adhere to the I/O rate defined by the innodb_io_capacity setting
  innodb_log_compressed_pages = OFF #固态硬盘可以关闭
  innodb_read_io_threads = 4
  innodb_write_io_threads = 4
  innodb_thread_concurrency = 10 #将其设置为处理器数目加磁盘数之和，对于高并发事务，可以再大些
  innodb_monitor_enable = all

# 临时表优化
  tmp_table_size = 64M
  max_heap_table_size = 64M
  temptable_max_ram = 64M #TempTable引擎的大小由参数temp_table_max_ram来控制，默认为1G。超过了则存储在磁盘上（ibtmp1）。

# 死锁记录至error_log
  innodb_print_all_deadlocks = 0

# 关闭时间戳默认值
  explicit_defaults_for_timestamp = 1

# 安全加固
  user = mysql
  skip_name_resolve #生产环境中必须设置这个参数，否则反向解析缓慢时，会导致MySQL连接缓慢，出现严重的性能问题
  local_infile = 1 #使用loadDump函数必备

# 超时时间
  wait_timeout = 3600
  interactive_timeout = 3600

[mysql]

  socket=/var/lib/mysql/mysql.sock

[client]

  socket=/var/lib/mysql/mysql.sock