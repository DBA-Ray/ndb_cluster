#initial for ndb cluster auto installer
- name: Ensure group "mysqlcluster" exists
  group:
    name: mysqlcluster
    state: present

- name: Ensure the user "mysqlcluster" exists
  user:
    name: mysqlcluster
    group: mysqlcluster
    password: "{{ mysqlcluster_password | password_hash('sha512') }}"
    update_password: always

- name: Create directories for mysqlcluster
  file: path={{ item }} state=directory owner=mysqlcluster group=mysqlcluster
  with_items:
    - "{{ package_dir }}"
    - "{{ shelldir }}"
    - "{{ monitordir }}"
    - "{{ basedir }}"
    - "{{ etcdir }}"
    - "{{ logdir }}"
  when: ansible_hostname != "ansible"

- name: Install the ndb cluster repo
  yum:
    name: "{{ remote_repo }}"
    state: present

- name: Copy the mysql-community.repo
  copy: src=mysql-community.repo dest=/etc/yum.repos.d/mysql-community.repo

- name: Install the ndb cluster basic rpm
  yum:
    name: ["{{ cluster_server_name }}", "{{ cluster_lib_compat_name }}", "{{ date_node_name }}", "{{ ndb_client_name }}", "{{ management_server_name }}", "{{ cluster_embedded_name }}", "{{ cluster_memcached_name }}"] 
    state: present

- name: Install the auto installer
  yum:
    name: "mysql-cluster-community-auto-installer-{{ ndb_version }}"
    state: present
  when: ansible_hostname == "ansible"

- name: Install the required software on set-up host
  pip:
    name: [cryptography, paramiko]
  when: ansible_hostname == "ansible"

- name: Remove /root/.mcc/mcc.pid
  file:
    path: /root/.mcc/mcc.pid
    state: absent
  when: whether_uninstall and (ansible_hostname == "ansible")

- name: Start the web server for auto installer
  shell: "echo '/usr/bin/ndb_setup.py -p {{ web_port }} -N 0.0.0.0' > /root/.mcc/ndb_auto.txt"
  when: ansible_hostname == "ansible"